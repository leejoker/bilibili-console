#!/usr/bin/env ruby

require 'thor'
require 'bilibili_console'

# bilibili-console command line
class BiliConsole < Thor
  def self.exit_on_failure?
    true
  end

  desc 'help', 'help content'
  def help
    banner = File.read(File.expand_path('banner.txt', __dir__))
    puts <<~HELP
      #{banner}

      Usage: bili-console [arguments]
        help    help messages
        login   qrcode login
        user    user info
        manga   bilibili manga checkin
    HELP
  end

  desc 'login', 'login with qrcode'
  def login
    bc = BilibiliConsole.new
    puts bc.login
  end

  desc 'user', 'get user info'
  def user
    bc = BilibiliConsole.new
    user = bc.login_user_info
    puts <<~USER
      uid: #{user.uid}
      uname: #{user.uname}
      level: #{user.level_info[:current_level]}
    USER
  end

  desc 'manga', 'checkin bilibili manga'
  def manga_checkin
    bc = BilibiliConsole.new
    bc.manga.load_cookie
    body = bc.manga_checkin
    if body.code == 'invalid_argument'
      puts '您已经签到了'
    else
      puts '签到成功'
    end
  end

  desc 'down', 'download video by bv code'
  def download_video(bv)
    bc = BilibiliConsole.new
    bc.video.load_cookie
    bc.download_video(bv)
  end
end

BiliConsole.start
